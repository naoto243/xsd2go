// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://ddex.net/xml/ern/351
package ern

import (
	"ddex/ddexmodels/ddex"
	"ddex/ddexmodels/ddexC"
	"ddex/ddexmodels/iso639a2"
	"encoding/xml"
)

// Element
type NewReleaseMessage struct {
	XMLName xml.Name `xml:"NewReleaseMessage"`

	MessageSchemaVersionId string `xml:"MessageSchemaVersionId,attr"`

	BusinessProfileVersionId string `xml:"BusinessProfileVersionId,attr"`

	ReleaseProfileVersionId string `xml:"ReleaseProfileVersionId,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	MessageHeader ddexC.MessageHeader `xml:"MessageHeader"`

	UpdateIndicator string `xml:"UpdateIndicator"`

	IsBackfill *bool `xml:"IsBackfill"`

	CatalogTransfer *CatalogTransfer `xml:"CatalogTransfer"`

	WorkList *ddexC.WorkList `xml:"WorkList"`

	CueSheetList *CueSheetList `xml:"CueSheetList"`

	ResourceList ResourceList `xml:"ResourceList"`

	CollectionList *CollectionList `xml:"CollectionList"`

	ReleaseList ReleaseList `xml:"ReleaseList"`

	DealList *DealList `xml:"DealList"`
}

// Element
type CatalogListMessage struct {
	XMLName xml.Name `xml:"CatalogListMessage"`

	MessageSchemaVersionId string `xml:"MessageSchemaVersionId,attr"`

	BusinessProfileVersionId string `xml:"BusinessProfileVersionId,attr"`

	ReleaseProfileVersionId string `xml:"ReleaseProfileVersionId,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	MessageHeader ddexC.MessageHeader `xml:"MessageHeader"`

	PublicationDate string `xml:"PublicationDate"`

	CatalogItem []CatalogItem `xml:"CatalogItem"`
}

// XSD ComplexType declarations

type CatalogItem struct {
	XMLName xml.Name

	TerritoryCode []string `xml:"TerritoryCode"`

	ReleaseId []ddexC.ReleaseId `xml:"ReleaseId"`

	Title ddexC.Title `xml:"Title"`

	DisplayArtistName ddexC.Name `xml:"DisplayArtistName"`

	ContributorName []ddexC.Name `xml:"ContributorName"`

	DisplayTitle ddexC.ReferenceTitle `xml:"DisplayTitle"`

	LabelName []ddexC.LabelName `xml:"LabelName"`

	Genre []ddexC.Genre `xml:"Genre"`

	PLine []ddexC.PLine `xml:"PLine"`

	CLine []ddexC.CLine `xml:"CLine"`

	ReleaseDate ddexC.EventDate `xml:"ReleaseDate"`

	InnerXml string `xml:",innerxml"`
}

type CatalogReleaseReferenceList struct {
	XMLName xml.Name

	CatalogReleaseReference []string `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type CatalogTransfer struct {
	XMLName xml.Name

	CatalogTransferCompleted bool `xml:"CatalogTransferCompleted"`

	EffectiveTransferDate *ddexC.EventDate `xml:"EffectiveTransferDate"`

	CatalogReleaseReferenceList CatalogReleaseReferenceList `xml:"CatalogReleaseReferenceList"`

	TransferringFrom ddexC.PartyDescriptor `xml:"TransferringFrom"`

	TransferringTo ddexC.PartyDescriptor `xml:"TransferringTo"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type Character struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	ResourceContributor *ResourceContributor `xml:"ResourceContributor"`

	PartyId *ddexC.PartyId `xml:"PartyId"`

	PartyName []ddexC.PartyName `xml:"PartyName"`

	PartyId *ddexC.PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type Collection struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	CollectionId []ddexC.CollectionId `xml:"CollectionId"`

	CollectionType []ddexC.CollectionType `xml:"CollectionType"`

	CollectionReference string `xml:"CollectionReference"`

	Title []ddexC.Title `xml:"Title"`

	Contributor []ResourceContributor `xml:"Contributor"`

	Character []Character `xml:"Character"`

	CollectionCollectionReferenceList *ddexC.CollectionCollectionReferenceList `xml:"CollectionCollectionReferenceList"`

	IsComplete bool `xml:"IsComplete"`

	Duration string `xml:"Duration"`

	DurationOfMusicalContent string `xml:"DurationOfMusicalContent"`

	CreationDate *ddexC.EventDate `xml:"CreationDate"`

	OriginalReleaseDate *ddexC.EventDate `xml:"OriginalReleaseDate"`

	OriginalLanguage string `xml:"OriginalLanguage"`

	CollectionDetailsByTerritory []CollectionDetailsByTerritory `xml:"CollectionDetailsByTerritory"`

	CollectionResourceReferenceList *CollectionResourceReferenceList `xml:"CollectionResourceReferenceList"`

	CollectionWorkReferenceList *CollectionWorkReferenceList `xml:"CollectionWorkReferenceList"`

	RepresentativeImageReference string `xml:"RepresentativeImageReference"`

	PLine []ddexC.PLine `xml:"PLine"`

	CLine []ddexC.CLine `xml:"CLine"`

	InnerXml string `xml:",innerxml"`
}

type CollectionDetailsByTerritory struct {
	XMLName xml.Name

	Title []ddexC.Title `xml:"Title"`

	Contributor []ResourceContributor `xml:"Contributor"`

	IsComplete *bool `xml:"IsComplete"`

	Character []Character `xml:"Character"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type CollectionList struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Collection []Collection `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type CollectionResourceReference struct {
	XMLName xml.Name

	CollectionResourceReference string `xml:"CollectionResourceReference"`

	Duration string `xml:"Duration"`

	InnerXml string `xml:",innerxml"`
}

type CollectionResourceReferenceList struct {
	XMLName xml.Name

	CollectionResourceReference []CollectionResourceReference `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type CollectionWorkReference struct {
	XMLName xml.Name

	CollectionWorkReference string `xml:"CollectionWorkReference"`

	Duration string `xml:"Duration"`

	InnerXml string `xml:",innerxml"`
}

type CollectionWorkReferenceList struct {
	XMLName xml.Name

	CollectionWorkReference []CollectionWorkReference `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type Condition struct {
	XMLName xml.Name

	Value float64 `xml:"Value"`

	Unit string `xml:"Unit"`

	RelationalRelator string `xml:"RelationalRelator"`

	InnerXml string `xml:",innerxml"`
}

type Cue struct {
	XMLName xml.Name

	CueUseType *ddexC.CueUseType `xml:"CueUseType"`

	CueThemeType *ddexC.CueThemeType `xml:"CueThemeType"`

	CueVocalType *ddexC.CueVocalType `xml:"CueVocalType"`

	IsDance *bool `xml:"IsDance"`

	CueVisualPerceptionType *ddexC.CueVisualPerceptionType `xml:"CueVisualPerceptionType"`

	CueOrigin *ddexC.CueOrigin `xml:"CueOrigin"`

	HasMusicalContent *bool `xml:"HasMusicalContent"`

	StartTime string `xml:"StartTime"`

	Duration string `xml:"Duration"`

	EndTime string `xml:"EndTime"`

	PLine []ddexC.PLine `xml:"PLine"`

	CLine []ddexC.CLine `xml:"CLine"`

	CueCreationReference []ddexC.CueCreationReference `xml:"CueCreationReference"`

	ReferencedCreationType string `xml:"ReferencedCreationType"`

	ReferencedCreationId *ddexC.CreationId `xml:"ReferencedCreationId"`

	ReferencedCreationTitle []ddexC.Title `xml:"ReferencedCreationTitle"`

	ReferencedCreationContributor []ResourceContributor `xml:"ReferencedCreationContributor"`

	ReferencedCreationCharacter []Character `xml:"ReferencedCreationCharacter"`

	InnerXml string `xml:",innerxml"`
}

type CueSheet struct {
	XMLName xml.Name

	CueSheetId []ddexC.ProprietaryId `xml:"CueSheetId"`

	CueSheetReference string `xml:"CueSheetReference"`

	CueSheetType ddexC.CueSheetType `xml:"CueSheetType"`

	Cue []Cue `xml:"Cue"`

	InnerXml string `xml:",innerxml"`
}

type CueSheetList struct {
	XMLName xml.Name

	CueSheet []CueSheet `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type Deal struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	DealReference []ddexC.DealReference `xml:"DealReference"`

	DealTerms *DealTerms `xml:"DealTerms"`

	ResourceUsage *ResourceUsage `xml:"ResourceUsage"`

	DealTechnicalResourceDetailsReferenceList *DealTechnicalResourceDetailsReferenceList `xml:"DealTechnicalResourceDetailsReferenceList"`

	DistributionChannelPage []ddexC.WebPage `xml:"DistributionChannelPage"`

	InnerXml string `xml:",innerxml"`
}

type DealList struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ReleaseDeal []ReleaseDeal `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type DealTechnicalResourceDetailsReferenceList struct {
	XMLName xml.Name

	DealTechnicalResourceDetailsReference []string `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type DealTerms struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	CommercialModelType []ddexC.CommercialModelType `xml:"CommercialModelType"`

	PriceInformation []ddexC.PriceInformation `xml:"PriceInformation"`

	ValidityPeriod []ddexC.Period `xml:"ValidityPeriod"`

	ConsumerRentalPeriod *ddexC.ConsumerRentalPeriod `xml:"ConsumerRentalPeriod"`

	PreOrderReleaseDate *ddexC.EventDate `xml:"PreOrderReleaseDate"`

	PreOrderPreviewDate *ddexC.EventDate `xml:"PreOrderPreviewDate"`

	IsExclusive *bool `xml:"IsExclusive"`

	RelatedReleaseOfferSet []RelatedReleaseOfferSet `xml:"RelatedReleaseOfferSet"`

	PhysicalReturns *PhysicalReturns `xml:"PhysicalReturns"`

	NumberOfProductsPerCarton *int64 `xml:"NumberOfProductsPerCarton"`

	RightsClaimPolicy []RightsClaimPolicy `xml:"RightsClaimPolicy"`

	WebPolicy []WebPolicy `xml:"WebPolicy"`

	Usage []ddexC.Usage `xml:"Usage"`

	AllDealsCancelled *bool `xml:"AllDealsCancelled"`

	TakeDown *bool `xml:"TakeDown"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	DistributionChannel []ddexC.DSP `xml:"DistributionChannel"`

	ExcludedDistributionChannel []ddexC.DSP `xml:"ExcludedDistributionChannel"`

	IsPromotional *bool `xml:"IsPromotional"`

	PromotionalCode *ddexC.PromotionalCode `xml:"PromotionalCode"`

	InnerXml string `xml:",innerxml"`
}

type Image struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ImageType *ddexC.ImageType `xml:"ImageType"`

	IsArtistRelated *bool `xml:"IsArtistRelated"`

	ImageId []ddexC.ImageId `xml:"ImageId"`

	ResourceReference string `xml:"ResourceReference"`

	Title []ddexC.Title `xml:"Title"`

	CreationDate *ddexC.EventDate `xml:"CreationDate"`

	ImageDetailsByTerritory []ImageDetailsByTerritory `xml:"ImageDetailsByTerritory"`

	InnerXml string `xml:",innerxml"`
}

type ImageDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	CLine []ddexC.CLine `xml:"CLine"`

	Description *ddexC.Description `xml:"Description"`

	CourtesyLine *ddexC.CourtesyLine `xml:"CourtesyLine"`

	OriginalResourceReleaseDate *ddexC.EventDate `xml:"OriginalResourceReleaseDate"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	Keywords []ddexC.Keywords `xml:"Keywords"`

	Synopsis *ddexC.Synopsis `xml:"Synopsis"`

	Genre []ddexC.Genre `xml:"Genre"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	TechnicalImageDetails []TechnicalImageDetails `xml:"TechnicalImageDetails"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type MIDI struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	MidiType *ddexC.MidiType `xml:"MidiType"`

	IsArtistRelated *bool `xml:"IsArtistRelated"`

	MidiId []ddexC.MidiId `xml:"MidiId"`

	IndirectMidiId []ddexC.MusicalWorkId `xml:"IndirectMidiId"`

	ResourceReference string `xml:"ResourceReference"`

	ReferenceTitle ddexC.ReferenceTitle `xml:"ReferenceTitle"`

	InstrumentationDescription *ddexC.Description `xml:"InstrumentationDescription"`

	IsMedley *bool `xml:"IsMedley"`

	IsPotpourri *bool `xml:"IsPotpourri"`

	IsInstrumental *bool `xml:"IsInstrumental"`

	IsBackground *bool `xml:"IsBackground"`

	IsHiddenResource *bool `xml:"IsHiddenResource"`

	IsBonusResource *bool `xml:"IsBonusResource"`

	IsComputerGenerated *bool `xml:"IsComputerGenerated"`

	NoSilenceBefore *bool `xml:"NoSilenceBefore"`

	NoSilenceAfter *bool `xml:"NoSilenceAfter"`

	PerformerInformationRequired *bool `xml:"PerformerInformationRequired"`

	LanguageOfPerformance string `xml:"LanguageOfPerformance"`

	Duration string `xml:"Duration"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	ResourceMusicalWorkReferenceList *ddexC.ResourceMusicalWorkReferenceList `xml:"ResourceMusicalWorkReferenceList"`

	ResourceContainedResourceReferenceList *ddexC.ResourceContainedResourceReferenceList `xml:"ResourceContainedResourceReferenceList"`

	CreationDate *ddexC.EventDate `xml:"CreationDate"`

	MasteredDate *ddexC.EventDate `xml:"MasteredDate"`

	MidiDetailsByTerritory []MidiDetailsByTerritory `xml:"MidiDetailsByTerritory"`

	InnerXml string `xml:",innerxml"`
}

type MidiDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []ddexC.Title `xml:"Title"`

	DisplayArtist []ddexC.Artist `xml:"DisplayArtist"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	LabelName []ddexC.LabelName `xml:"LabelName"`

	RightsController []RightsController `xml:"RightsController"`

	RemasteredDate *ddexC.EventDate `xml:"RemasteredDate"`

	OriginalResourceReleaseDate *ddexC.EventDate `xml:"OriginalResourceReleaseDate"`

	CLine []ddexC.CLine `xml:"CLine"`

	CourtesyLine *ddexC.CourtesyLine `xml:"CourtesyLine"`

	SequenceNumber string `xml:"SequenceNumber"`

	HostSoundCarrier []ddexC.HostSoundCarrier `xml:"HostSoundCarrier"`

	MarketingComment *ddexC.Comment `xml:"MarketingComment"`

	Genre []ddexC.Genre `xml:"Genre"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	Keywords []ddexC.Keywords `xml:"Keywords"`

	Synopsis *ddexC.Synopsis `xml:"Synopsis"`

	TechnicalMidiDetails []TechnicalMidiDetails `xml:"TechnicalMidiDetails"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type PhysicalReturns struct {
	XMLName xml.Name

	PhysicalReturnsAllowed bool `xml:"PhysicalReturnsAllowed"`

	LatestDateForPhysicalReturns string `xml:"LatestDateForPhysicalReturns"`

	InnerXml string `xml:",innerxml"`
}

type PreviewDetails struct {
	XMLName xml.Name

	PartType *ddexC.Description `xml:"PartType"`

	TopLeftCorner *float64 `xml:"TopLeftCorner"`

	BottomRightCorner *float64 `xml:"BottomRightCorner"`

	ExpressionType string `xml:"ExpressionType"`

	InnerXml string `xml:",innerxml"`
}

type RelatedReleaseOfferSet struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Deal []Deal `xml:"Deal"`

	ReleaseId []ddexC.ReleaseId `xml:"ReleaseId"`

	ReleaseDescription *ddexC.Description `xml:"ReleaseDescription"`

	InnerXml string `xml:",innerxml"`
}

type Release struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	IsMainRelease bool `xml:"IsMainRelease,attr"`

	ReleaseId []ddexC.ReleaseId `xml:"ReleaseId"`

	ReleaseReference []string `xml:"ReleaseReference"`

	ExternalResourceLink []ddexC.ExternalResourceLink `xml:"ExternalResourceLink"`

	SalesReportingProxyReleaseId []ddexC.SalesReportingProxyReleaseId `xml:"SalesReportingProxyReleaseId"`

	ReferenceTitle ddexC.ReferenceTitle `xml:"ReferenceTitle"`

	ReleaseCollectionReferenceList *ddexC.ReleaseCollectionReferenceList `xml:"ReleaseCollectionReferenceList"`

	ReleaseType []ddexC.ReleaseType `xml:"ReleaseType"`

	ReleaseDetailsByTerritory []ReleaseDetailsByTerritory `xml:"ReleaseDetailsByTerritory"`

	Duration string `xml:"Duration"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	PLine []ddexC.PLine `xml:"PLine"`

	CLine []ddexC.CLine `xml:"CLine"`

	ArtistProfilePage []ddexC.WebPage `xml:"ArtistProfilePage"`

	GlobalReleaseDate *ddexC.EventDate `xml:"GlobalReleaseDate"`

	GlobalOriginalReleaseDate *ddexC.EventDate `xml:"GlobalOriginalReleaseDate"`

	ReleaseResourceReferenceList *ddexC.ReleaseResourceReferenceList `xml:"ReleaseResourceReferenceList"`

	ResourceOmissionReason *ddexC.ResourceOmissionReason `xml:"ResourceOmissionReason"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseDeal struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	DealReleaseReference []string `xml:"DealReleaseReference"`

	Deal []Deal `xml:"Deal"`

	EffectiveDate string `xml:"EffectiveDate"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	DisplayArtistName []ddexC.Name `xml:"DisplayArtistName"`

	LabelName []ddexC.LabelName `xml:"LabelName"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	Title []ddexC.Title `xml:"Title"`

	DisplayArtist []ddexC.Artist `xml:"DisplayArtist"`

	IsMultiArtistCompilation *bool `xml:"IsMultiArtistCompilation"`

	AdministratingRecordCompany []ddexC.AdministratingRecordCompany `xml:"AdministratingRecordCompany"`

	ReleaseType []ddexC.ReleaseType `xml:"ReleaseType"`

	RelatedRelease []ddexC.RelatedRelease `xml:"RelatedRelease"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	AvRating []ddexC.AvRating `xml:"AvRating"`

	MarketingComment *ddexC.Comment `xml:"MarketingComment"`

	ResourceGroup []ResourceGroup `xml:"ResourceGroup"`

	Genre []ddexC.Genre `xml:"Genre"`

	ReleaseDate *ddexC.EventDate `xml:"ReleaseDate"`

	OriginalReleaseDate *ddexC.EventDate `xml:"OriginalReleaseDate"`

	OriginalDigitalReleaseDate *ddexC.EventDate `xml:"OriginalDigitalReleaseDate"`

	Keywords []ddexC.Keywords `xml:"Keywords"`

	Synopsis *ddexC.Synopsis `xml:"Synopsis"`

	Character []Character `xml:"Character"`

	NumberOfUnitsPerPhysicalRelease *int64 `xml:"NumberOfUnitsPerPhysicalRelease"`

	DisplayConductor []ddexC.Artist `xml:"DisplayConductor"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseList struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Release []Release `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type ResourceContributor struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	ResourceContributorRole []ddexC.ResourceContributorRole `xml:"ResourceContributorRole"`

	IsFeaturedArtist *bool `xml:"IsFeaturedArtist"`

	IsContractedArtist *bool `xml:"IsContractedArtist"`

	TerritoryOfPerformance []string `xml:"TerritoryOfPerformance"`

	InstrumentType []string `xml:"InstrumentType"`

	ArtistDelegatedUsageRights *ddexC.ArtistDelegatedUsageRights `xml:"ArtistDelegatedUsageRights"`

	Sex string `xml:"Sex"`

	DateAndPlaceOfBirth *ddexC.EventDate `xml:"DateAndPlaceOfBirth"`

	DateAndPlaceOfDeath *ddexC.EventDate `xml:"DateAndPlaceOfDeath"`

	PrimaryRole *ddexC.ArtistRole `xml:"PrimaryRole"`

	PrimaryInstrumentType string `xml:"PrimaryInstrumentType"`

	GoverningAgreementType *ddexC.GoverningAgreementType `xml:"GoverningAgreementType"`

	ContactInformation *ddexC.ContactId `xml:"ContactInformation"`

	TerritoryOfResidency string `xml:"TerritoryOfResidency"`

	AdditionalRoles []ddexC.ArtistRole `xml:"AdditionalRoles"`

	Genre []ddexC.Genre `xml:"Genre"`

	Membership []ddexC.Membership `xml:"Membership"`

	PartyId *ddexC.PartyId `xml:"PartyId"`

	PartyName []ddexC.PartyName `xml:"PartyName"`

	PartyId *ddexC.PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type ResourceGroup struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []ddexC.Title `xml:"Title"`

	SequenceNumber *int64 `xml:"SequenceNumber"`

	DisplayArtist []ddexC.Artist `xml:"DisplayArtist"`

	DisplayConductor []ddexC.Artist `xml:"DisplayConductor"`

	DisplayComposer []ddexC.Artist `xml:"DisplayComposer"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	ResourceGroup []ResourceGroup `xml:"ResourceGroup"`

	ResourceGroupContentItem []ddexC.ResourceGroupContentItem `xml:"ResourceGroupContentItem"`

	ResourceGroupResourceReferenceList *ddexC.ResourceGroupResourceReferenceList `xml:"ResourceGroupResourceReferenceList"`

	ResourceGroupReleaseReference string `xml:"ResourceGroupReleaseReference"`

	ReleaseId *ddexC.ReleaseId `xml:"ReleaseId"`

	InnerXml string `xml:",innerxml"`
}

type ResourceList struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	SoundRecording []SoundRecording `xml:"SoundRecording"`

	MIDI []MIDI `xml:"MIDI"`

	Video []Video `xml:"Video"`

	Image []Image `xml:"Image"`

	Text []Text `xml:"Text"`

	SheetMusic []SheetMusic `xml:"SheetMusic"`

	Software []Software `xml:"Software"`

	UserDefinedResource []UserDefinedResource `xml:"UserDefinedResource"`

	InnerXml string `xml:",innerxml"`
}

type ResourceUsage struct {
	XMLName xml.Name

	DealResourceReference []string `xml:"DealResourceReference"`

	Usage []ddexC.Usage `xml:"Usage"`

	InnerXml string `xml:",innerxml"`
}

type RightsClaimPolicy struct {
	XMLName xml.Name

	Condition Condition `xml:"Condition"`

	RightsClaimPolicyType string `xml:"RightsClaimPolicyType"`

	InnerXml string `xml:",innerxml"`
}

type RightsController struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	RightsControllerRole []string `xml:"RightsControllerRole"`

	RightsControllerType string `xml:"RightsControllerType"`

	TerritoryOfRegistration string `xml:"TerritoryOfRegistration"`

	StartDate string `xml:"StartDate"`

	EndDate string `xml:"EndDate"`

	PartyId *ddexC.PartyId `xml:"PartyId"`

	PartyName []ddexC.PartyName `xml:"PartyName"`

	PartyId *ddexC.PartyId `xml:"PartyId"`

	RightShareUnknown *bool `xml:"RightShareUnknown"`

	RightSharePercentage string `xml:"RightSharePercentage"`

	InnerXml string `xml:",innerxml"`
}

type SheetMusic struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	SheetMusicType *ddexC.SheetMusicType `xml:"SheetMusicType"`

	IsArtistRelated *bool `xml:"IsArtistRelated"`

	SheetMusicId []ddexC.SheetMusicId `xml:"SheetMusicId"`

	IndirectSheetMusicId []ddexC.MusicalWorkId `xml:"IndirectSheetMusicId"`

	ResourceReference string `xml:"ResourceReference"`

	LanguageOfLyrics string `xml:"LanguageOfLyrics"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	ResourceMusicalWorkReferenceList *ddexC.ResourceMusicalWorkReferenceList `xml:"ResourceMusicalWorkReferenceList"`

	ResourceContainedResourceReferenceList *ddexC.ResourceContainedResourceReferenceList `xml:"ResourceContainedResourceReferenceList"`

	ReferenceTitle ddexC.ReferenceTitle `xml:"ReferenceTitle"`

	CreationDate *ddexC.EventDate `xml:"CreationDate"`

	SheetMusicDetailsByTerritory []SheetMusicDetailsByTerritory `xml:"SheetMusicDetailsByTerritory"`

	InnerXml string `xml:",innerxml"`
}

type SheetMusicDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []ddexC.Title `xml:"Title"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	CLine []ddexC.CLine `xml:"CLine"`

	CourtesyLine *ddexC.CourtesyLine `xml:"CourtesyLine"`

	OriginalResourceReleaseDate *ddexC.EventDate `xml:"OriginalResourceReleaseDate"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	Genre []ddexC.Genre `xml:"Genre"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	TechnicalSheetMusicDetails []TechnicalSheetMusicDetails `xml:"TechnicalSheetMusicDetails"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type Software struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	SoftwareType *ddexC.SoftwareType `xml:"SoftwareType"`

	IsArtistRelated *bool `xml:"IsArtistRelated"`

	SoftwareId []ddexC.SoftwareId `xml:"SoftwareId"`

	IndirectSoftwareId []ddexC.MusicalWorkId `xml:"IndirectSoftwareId"`

	ResourceReference string `xml:"ResourceReference"`

	ResourceMusicalWorkReferenceList *ddexC.ResourceMusicalWorkReferenceList `xml:"ResourceMusicalWorkReferenceList"`

	ResourceContainedResourceReferenceList *ddexC.ResourceContainedResourceReferenceList `xml:"ResourceContainedResourceReferenceList"`

	Title []ddexC.Title `xml:"Title"`

	CreationDate *ddexC.EventDate `xml:"CreationDate"`

	SoftwareDetailsByTerritory []SoftwareDetailsByTerritory `xml:"SoftwareDetailsByTerritory"`

	InnerXml string `xml:",innerxml"`
}

type SoftwareDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	PLine []ddexC.PLine `xml:"PLine"`

	CLine []ddexC.CLine `xml:"CLine"`

	CourtesyLine *ddexC.CourtesyLine `xml:"CourtesyLine"`

	OriginalResourceReleaseDate *ddexC.EventDate `xml:"OriginalResourceReleaseDate"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	Keywords []ddexC.Keywords `xml:"Keywords"`

	Synopsis *ddexC.Synopsis `xml:"Synopsis"`

	Genre []ddexC.Genre `xml:"Genre"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	TechnicalSoftwareDetails []TechnicalSoftwareDetails `xml:"TechnicalSoftwareDetails"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type SoundRecording struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	SoundRecordingType *ddexC.SoundRecordingType `xml:"SoundRecordingType"`

	IsArtistRelated *bool `xml:"IsArtistRelated"`

	SoundRecordingId []ddexC.SoundRecordingId `xml:"SoundRecordingId"`

	IndirectSoundRecordingId []ddexC.MusicalWorkId `xml:"IndirectSoundRecordingId"`

	ResourceReference string `xml:"ResourceReference"`

	ReferenceTitle ddexC.ReferenceTitle `xml:"ReferenceTitle"`

	InstrumentationDescription *ddexC.Description `xml:"InstrumentationDescription"`

	IsMedley *bool `xml:"IsMedley"`

	IsPotpourri *bool `xml:"IsPotpourri"`

	IsInstrumental *bool `xml:"IsInstrumental"`

	IsBackground *bool `xml:"IsBackground"`

	IsHiddenResource *bool `xml:"IsHiddenResource"`

	IsBonusResource *bool `xml:"IsBonusResource"`

	IsComputerGenerated *bool `xml:"IsComputerGenerated"`

	IsRemastered *bool `xml:"IsRemastered"`

	NoSilenceBefore *bool `xml:"NoSilenceBefore"`

	NoSilenceAfter *bool `xml:"NoSilenceAfter"`

	PerformerInformationRequired *bool `xml:"PerformerInformationRequired"`

	LanguageOfPerformance string `xml:"LanguageOfPerformance"`

	Duration string `xml:"Duration"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	SoundRecordingCollectionReferenceList *ddexC.SoundRecordingCollectionReferenceList `xml:"SoundRecordingCollectionReferenceList"`

	ResourceMusicalWorkReferenceList *ddexC.ResourceMusicalWorkReferenceList `xml:"ResourceMusicalWorkReferenceList"`

	ResourceContainedResourceReferenceList *ddexC.ResourceContainedResourceReferenceList `xml:"ResourceContainedResourceReferenceList"`

	CreationDate *ddexC.EventDate `xml:"CreationDate"`

	MasteredDate *ddexC.EventDate `xml:"MasteredDate"`

	SoundRecordingDetailsByTerritory []SoundRecordingDetailsByTerritory `xml:"SoundRecordingDetailsByTerritory"`

	TerritoryOfCommissioning string `xml:"TerritoryOfCommissioning"`

	NumberOfFeaturedArtists *int64 `xml:"NumberOfFeaturedArtists"`

	NumberOfNonFeaturedArtists *int64 `xml:"NumberOfNonFeaturedArtists"`

	NumberOfContractedArtists *int64 `xml:"NumberOfContractedArtists"`

	NumberOfNonContractedArtists *int64 `xml:"NumberOfNonContractedArtists"`

	InnerXml string `xml:",innerxml"`
}

type SoundRecordingDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []ddexC.Title `xml:"Title"`

	DisplayArtist []ddexC.Artist `xml:"DisplayArtist"`

	DisplayConductor []ddexC.Artist `xml:"DisplayConductor"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	LabelName []ddexC.LabelName `xml:"LabelName"`

	RightsController []RightsController `xml:"RightsController"`

	RemasteredDate *ddexC.EventDate `xml:"RemasteredDate"`

	OriginalResourceReleaseDate *ddexC.EventDate `xml:"OriginalResourceReleaseDate"`

	PLine []ddexC.PLine `xml:"PLine"`

	CourtesyLine *ddexC.CourtesyLine `xml:"CourtesyLine"`

	SequenceNumber string `xml:"SequenceNumber"`

	HostSoundCarrier []ddexC.HostSoundCarrier `xml:"HostSoundCarrier"`

	MarketingComment *ddexC.Comment `xml:"MarketingComment"`

	Genre []ddexC.Genre `xml:"Genre"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	AvRating []ddexC.AvRating `xml:"AvRating"`

	TechnicalSoundRecordingDetails []TechnicalSoundRecordingDetails `xml:"TechnicalSoundRecordingDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	Keywords []ddexC.Keywords `xml:"Keywords"`

	Synopsis *ddexC.Synopsis `xml:"Synopsis"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type SoundRecordingPreviewDetails struct {
	XMLName xml.Name

	PartType *ddexC.Description `xml:"PartType"`

	StartPoint *float64 `xml:"StartPoint"`

	EndPoint *float64 `xml:"EndPoint"`

	Duration string `xml:"Duration"`

	TopLeftCorner *float64 `xml:"TopLeftCorner"`

	BottomRightCorner *float64 `xml:"BottomRightCorner"`

	ExpressionType string `xml:"ExpressionType"`

	InnerXml string `xml:",innerxml"`
}

type TechnicalImageDetails struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TechnicalResourceDetailsReference string `xml:"TechnicalResourceDetailsReference"`

	DrmPlatformType *ddexC.DrmPlatformType `xml:"DrmPlatformType"`

	ContainerFormat *ddexC.ContainerFormat `xml:"ContainerFormat"`

	ImageCodecType *ddexC.ImageCodecType `xml:"ImageCodecType"`

	ImageHeight *ddexC.Extent `xml:"ImageHeight"`

	ImageWidth *ddexC.Extent `xml:"ImageWidth"`

	AspectRatio *float64 `xml:"AspectRatio"`

	ColorDepth *int64 `xml:"ColorDepth"`

	ImageResolution *int64 `xml:"ImageResolution"`

	IsPreview *bool `xml:"IsPreview"`

	PreviewDetails *PreviewDetails `xml:"PreviewDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	ConsumerFulfillmentDate *ddexC.FulfillmentDate `xml:"ConsumerFulfillmentDate"`

	Fingerprint []ddexC.Fingerprint `xml:"Fingerprint"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type TechnicalMidiDetails struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TechnicalResourceDetailsReference string `xml:"TechnicalResourceDetailsReference"`

	Duration string `xml:"Duration"`

	ResourceProcessingRequired *bool `xml:"ResourceProcessingRequired"`

	UsableResourceDuration string `xml:"UsableResourceDuration"`

	IsPreview *bool `xml:"IsPreview"`

	PreviewDetails *SoundRecordingPreviewDetails `xml:"PreviewDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	ConsumerFulfillmentDate *ddexC.FulfillmentDate `xml:"ConsumerFulfillmentDate"`

	NumberOfVoices *int64 `xml:"NumberOfVoices"`

	SoundProcessorType *ddexC.SoundProcessorType `xml:"SoundProcessorType"`

	Fingerprint []ddexC.Fingerprint `xml:"Fingerprint"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type TechnicalSheetMusicDetails struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TechnicalResourceDetailsReference string `xml:"TechnicalResourceDetailsReference"`

	DrmPlatformType *ddexC.DrmPlatformType `xml:"DrmPlatformType"`

	ContainerFormat *ddexC.ContainerFormat `xml:"ContainerFormat"`

	SheetMusicCodecType *ddexC.SheetMusicCodecType `xml:"SheetMusicCodecType"`

	IsPreview *bool `xml:"IsPreview"`

	PreviewDetails *PreviewDetails `xml:"PreviewDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	ConsumerFulfillmentDate *ddexC.FulfillmentDate `xml:"ConsumerFulfillmentDate"`

	Fingerprint []ddexC.Fingerprint `xml:"Fingerprint"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type TechnicalSoftwareDetails struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TechnicalResourceDetailsReference string `xml:"TechnicalResourceDetailsReference"`

	DrmPlatformType *ddexC.DrmPlatformType `xml:"DrmPlatformType"`

	OperatingSystemType *ddexC.OperatingSystemType `xml:"OperatingSystemType"`

	IsPreview *bool `xml:"IsPreview"`

	PreviewDetails *PreviewDetails `xml:"PreviewDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	ConsumerFulfillmentDate *ddexC.FulfillmentDate `xml:"ConsumerFulfillmentDate"`

	Fingerprint []ddexC.Fingerprint `xml:"Fingerprint"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type TechnicalSoundRecordingDetails struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TechnicalResourceDetailsReference string `xml:"TechnicalResourceDetailsReference"`

	DrmPlatformType *ddexC.DrmPlatformType `xml:"DrmPlatformType"`

	ContainerFormat *ddexC.ContainerFormat `xml:"ContainerFormat"`

	AudioCodecType *ddexC.AudioCodecType `xml:"AudioCodecType"`

	BitRate *ddexC.BitRate `xml:"BitRate"`

	NumberOfChannels *int64 `xml:"NumberOfChannels"`

	SamplingRate *ddexC.SamplingRate `xml:"SamplingRate"`

	BitsPerSample *int64 `xml:"BitsPerSample"`

	Duration string `xml:"Duration"`

	ResourceProcessingRequired *bool `xml:"ResourceProcessingRequired"`

	UsableResourceDuration string `xml:"UsableResourceDuration"`

	IsPreview *bool `xml:"IsPreview"`

	PreviewDetails *SoundRecordingPreviewDetails `xml:"PreviewDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	ConsumerFulfillmentDate *ddexC.FulfillmentDate `xml:"ConsumerFulfillmentDate"`

	Fingerprint []ddexC.Fingerprint `xml:"Fingerprint"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type TechnicalTextDetails struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TechnicalResourceDetailsReference string `xml:"TechnicalResourceDetailsReference"`

	DrmPlatformType *ddexC.DrmPlatformType `xml:"DrmPlatformType"`

	ContainerFormat *ddexC.ContainerFormat `xml:"ContainerFormat"`

	TextCodecType *ddexC.TextCodecType `xml:"TextCodecType"`

	IsPreview *bool `xml:"IsPreview"`

	PreviewDetails *PreviewDetails `xml:"PreviewDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	ConsumerFulfillmentDate *ddexC.FulfillmentDate `xml:"ConsumerFulfillmentDate"`

	Fingerprint []ddexC.Fingerprint `xml:"Fingerprint"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type TechnicalUserDefinedResourceDetails struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TechnicalResourceDetailsReference string `xml:"TechnicalResourceDetailsReference"`

	UserDefinedValue []ddexC.UserDefinedValue `xml:"UserDefinedValue"`

	IsPreview *bool `xml:"IsPreview"`

	PreviewDetails *PreviewDetails `xml:"PreviewDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	ConsumerFulfillmentDate *ddexC.FulfillmentDate `xml:"ConsumerFulfillmentDate"`

	Fingerprint []ddexC.Fingerprint `xml:"Fingerprint"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type TechnicalVideoDetails struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TechnicalResourceDetailsReference string `xml:"TechnicalResourceDetailsReference"`

	DrmPlatformType *ddexC.DrmPlatformType `xml:"DrmPlatformType"`

	OverallBitRate *ddexC.BitRate `xml:"OverallBitRate"`

	ContainerFormat *ddexC.ContainerFormat `xml:"ContainerFormat"`

	VideoCodecType *ddexC.VideoCodecType `xml:"VideoCodecType"`

	VideoBitRate *ddexC.BitRate `xml:"VideoBitRate"`

	FrameRate *ddexC.FrameRate `xml:"FrameRate"`

	ImageHeight *ddexC.Extent `xml:"ImageHeight"`

	ImageWidth *ddexC.Extent `xml:"ImageWidth"`

	AspectRatio *float64 `xml:"AspectRatio"`

	ColorDepth *int64 `xml:"ColorDepth"`

	VideoDefinitionType string `xml:"VideoDefinitionType"`

	AudioCodecType *ddexC.AudioCodecType `xml:"AudioCodecType"`

	AudioBitRate *ddexC.BitRate `xml:"AudioBitRate"`

	NumberOfAudioChannels *int64 `xml:"NumberOfAudioChannels"`

	AudioSamplingRate *ddexC.SamplingRate `xml:"AudioSamplingRate"`

	AudioBitsPerSample *int64 `xml:"AudioBitsPerSample"`

	Duration string `xml:"Duration"`

	ResourceProcessingRequired *bool `xml:"ResourceProcessingRequired"`

	UsableResourceDuration string `xml:"UsableResourceDuration"`

	IsPreview *bool `xml:"IsPreview"`

	PreviewDetails *SoundRecordingPreviewDetails `xml:"PreviewDetails"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	ConsumerFulfillmentDate *ddexC.FulfillmentDate `xml:"ConsumerFulfillmentDate"`

	Fingerprint []ddexC.Fingerprint `xml:"Fingerprint"`

	FileAvailabilityDescription []ddexC.Description `xml:"FileAvailabilityDescription"`

	File []ddexC.File `xml:"File"`

	InnerXml string `xml:",innerxml"`
}

type Text struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TextType *ddexC.TextType `xml:"TextType"`

	IsArtistRelated *bool `xml:"IsArtistRelated"`

	TextId []ddexC.TextId `xml:"TextId"`

	IndirectTextId []ddexC.MusicalWorkId `xml:"IndirectTextId"`

	ResourceReference string `xml:"ResourceReference"`

	ResourceMusicalWorkReferenceList *ddexC.ResourceMusicalWorkReferenceList `xml:"ResourceMusicalWorkReferenceList"`

	ResourceContainedResourceReferenceList *ddexC.ResourceContainedResourceReferenceList `xml:"ResourceContainedResourceReferenceList"`

	Title []ddexC.Title `xml:"Title"`

	CreationDate *ddexC.EventDate `xml:"CreationDate"`

	TextDetailsByTerritory []TextDetailsByTerritory `xml:"TextDetailsByTerritory"`

	InnerXml string `xml:",innerxml"`
}

type TextDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	CLine []ddexC.CLine `xml:"CLine"`

	CourtesyLine *ddexC.CourtesyLine `xml:"CourtesyLine"`

	OriginalResourceReleaseDate *ddexC.EventDate `xml:"OriginalResourceReleaseDate"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	Keywords []ddexC.Keywords `xml:"Keywords"`

	Synopsis *ddexC.Synopsis `xml:"Synopsis"`

	Genre []ddexC.Genre `xml:"Genre"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	TechnicalTextDetails []TechnicalTextDetails `xml:"TechnicalTextDetails"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type UserDefinedResource struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	UserDefinedResourceType *ddexC.UserDefinedResourceType `xml:"UserDefinedResourceType"`

	IsArtistRelated *bool `xml:"IsArtistRelated"`

	UserDefinedResourceId []ddexC.UserDefinedResourceId `xml:"UserDefinedResourceId"`

	IndirectUserDefinedResourceId []ddexC.MusicalWorkId `xml:"IndirectUserDefinedResourceId"`

	ResourceReference string `xml:"ResourceReference"`

	ResourceMusicalWorkReferenceList *ddexC.ResourceMusicalWorkReferenceList `xml:"ResourceMusicalWorkReferenceList"`

	ResourceContainedResourceReferenceList *ddexC.ResourceContainedResourceReferenceList `xml:"ResourceContainedResourceReferenceList"`

	Title []ddexC.Title `xml:"Title"`

	UserDefinedValue []ddexC.UserDefinedValue `xml:"UserDefinedValue"`

	UserDefinedResourceDetailsByTerritory []UserDefinedResourceDetailsByTerritory `xml:"UserDefinedResourceDetailsByTerritory"`

	InnerXml string `xml:",innerxml"`
}

type UserDefinedResourceDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	UserDefinedValue []ddexC.UserDefinedValue `xml:"UserDefinedValue"`

	PLine []ddexC.PLine `xml:"PLine"`

	CLine []ddexC.CLine `xml:"CLine"`

	OriginalResourceReleaseDate *ddexC.EventDate `xml:"OriginalResourceReleaseDate"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	Keywords []ddexC.Keywords `xml:"Keywords"`

	Synopsis *ddexC.Synopsis `xml:"Synopsis"`

	Genre []ddexC.Genre `xml:"Genre"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	TechnicalUserDefinedResourceDetails []TechnicalUserDefinedResourceDetails `xml:"TechnicalUserDefinedResourceDetails"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type Video struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	VideoType *ddexC.VideoType `xml:"VideoType"`

	IsArtistRelated *bool `xml:"IsArtistRelated"`

	VideoId []ddexC.VideoId `xml:"VideoId"`

	IndirectVideoId []ddexC.MusicalWorkId `xml:"IndirectVideoId"`

	ResourceReference string `xml:"ResourceReference"`

	ReferenceTitle *ddexC.ReferenceTitle `xml:"ReferenceTitle"`

	Title []ddexC.Title `xml:"Title"`

	InstrumentationDescription *ddexC.Description `xml:"InstrumentationDescription"`

	IsMedley *bool `xml:"IsMedley"`

	IsPotpourri *bool `xml:"IsPotpourri"`

	IsInstrumental *bool `xml:"IsInstrumental"`

	IsBackground *bool `xml:"IsBackground"`

	IsHiddenResource *bool `xml:"IsHiddenResource"`

	IsBonusResource *bool `xml:"IsBonusResource"`

	IsRemastered *bool `xml:"IsRemastered"`

	NoSilenceBefore *bool `xml:"NoSilenceBefore"`

	NoSilenceAfter *bool `xml:"NoSilenceAfter"`

	PerformerInformationRequired *bool `xml:"PerformerInformationRequired"`

	LanguageOfPerformance []string `xml:"LanguageOfPerformance"`

	Duration string `xml:"Duration"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	VideoCollectionReferenceList *ddexC.SoundRecordingCollectionReferenceList `xml:"VideoCollectionReferenceList"`

	ResourceMusicalWorkReferenceList *ddexC.ResourceMusicalWorkReferenceList `xml:"ResourceMusicalWorkReferenceList"`

	ResourceContainedResourceReferenceList *ddexC.ResourceContainedResourceReferenceList `xml:"ResourceContainedResourceReferenceList"`

	CreationDate *ddexC.EventDate `xml:"CreationDate"`

	MasteredDate *ddexC.EventDate `xml:"MasteredDate"`

	VideoDetailsByTerritory []VideoDetailsByTerritory `xml:"VideoDetailsByTerritory"`

	TerritoryOfCommissioning string `xml:"TerritoryOfCommissioning"`

	NumberOfFeaturedArtists *int64 `xml:"NumberOfFeaturedArtists"`

	NumberOfNonFeaturedArtists *int64 `xml:"NumberOfNonFeaturedArtists"`

	NumberOfContractedArtists *int64 `xml:"NumberOfContractedArtists"`

	NumberOfNonContractedArtists *int64 `xml:"NumberOfNonContractedArtists"`

	VideoCueSheetReference []ddexC.VideoCueSheetReference `xml:"VideoCueSheetReference"`

	ReasonForCueSheetAbsence *ddexC.Reason `xml:"ReasonForCueSheetAbsence"`

	InnerXml string `xml:",innerxml"`
}

type VideoDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []ddexC.Title `xml:"Title"`

	DisplayArtist []ddexC.Artist `xml:"DisplayArtist"`

	DisplayConductor []ddexC.Artist `xml:"DisplayConductor"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []ddexC.IndirectResourceContributor `xml:"IndirectResourceContributor"`

	RightsAgreementId *ddexC.RightsAgreementId `xml:"RightsAgreementId"`

	LabelName []ddexC.LabelName `xml:"LabelName"`

	RightsController []RightsController `xml:"RightsController"`

	RemasteredDate *ddexC.EventDate `xml:"RemasteredDate"`

	OriginalResourceReleaseDate *ddexC.EventDate `xml:"OriginalResourceReleaseDate"`

	PLine []ddexC.PLine `xml:"PLine"`

	CourtesyLine *ddexC.CourtesyLine `xml:"CourtesyLine"`

	SequenceNumber string `xml:"SequenceNumber"`

	HostSoundCarrier []ddexC.HostSoundCarrier `xml:"HostSoundCarrier"`

	MarketingComment *ddexC.Comment `xml:"MarketingComment"`

	Genre []ddexC.Genre `xml:"Genre"`

	ParentalWarningType []ddexC.ParentalWarningType `xml:"ParentalWarningType"`

	AvRating []ddexC.AvRating `xml:"AvRating"`

	FulfillmentDate *ddexC.FulfillmentDate `xml:"FulfillmentDate"`

	Keywords []ddexC.Keywords `xml:"Keywords"`

	Synopsis *ddexC.Synopsis `xml:"Synopsis"`

	CLine []ddexC.CLine `xml:"CLine"`

	TechnicalVideoDetails []TechnicalVideoDetails `xml:"TechnicalVideoDetails"`

	Character []Character `xml:"Character"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type WebPolicy struct {
	XMLName xml.Name

	Condition *Condition `xml:"Condition"`

	AccessBlockingRequested *bool `xml:"AccessBlockingRequested"`

	AccessLimitation string `xml:"AccessLimitation"`

	EmbeddingAllowed *bool `xml:"EmbeddingAllowed"`

	UserRatingAllowed *bool `xml:"UserRatingAllowed"`

	UserCommentAllowed *bool `xml:"UserCommentAllowed"`

	UserResponsesAllowed *bool `xml:"UserResponsesAllowed"`

	SyndicationAllowed *bool `xml:"SyndicationAllowed"`

	InnerXml string `xml:",innerxml"`
}

// XSD SimpleType declarations
