// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://ddex.net/xml/20121219/ddexC
package ddexC

import (
	"ddex/ddexmodels/ddex"
	"ddex/ddexmodels/iso639a2"
	"encoding/xml"
)

// XSD ComplexType declarations

type AdditionalInformation struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type AdministratingRecordCompany struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Role ddex.AdministratingRecordCompanyRole `xml:"Role,attr"`

	PartyId *PartyId `xml:"PartyId"`

	PartyName []PartyName `xml:"PartyName"`

	PartyId *PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type AmountByUseAndDistributionChannelType struct {
	XMLName xml.Name

	Amount float64 `xml:"Amount"`

	UseType []UseType `xml:"UseType"`

	UserInterfaceType []UserInterfaceType `xml:"UserInterfaceType"`

	DistributionChannelType []DistributionChannelType `xml:"DistributionChannelType"`

	CarrierType []CarrierType `xml:"CarrierType"`

	InnerXml string `xml:",innerxml"`
}

type AmountPerCollection struct {
	XMLName xml.Name

	Amount float64 `xml:"Amount"`

	CollectionType CollectionType `xml:"CollectionType"`

	InnerXml string `xml:",innerxml"`
}

type Annotation struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type AppliedRoyaltyRate struct {
	XMLName xml.Name

	ValueType ddex.ValueType `xml:"ValueType,attr"`

	RoyaltyRateType ddex.RoyaltyRateType `xml:"RoyaltyRateType,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Artist struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	ArtistRole []ArtistRole `xml:"ArtistRole"`

	PartyId *PartyId `xml:"PartyId"`

	PartyName []PartyName `xml:"PartyName"`

	PartyId *PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type ArtistDelegatedUsageRights struct {
	XMLName xml.Name

	UseType []UseType `xml:"UseType"`

	UserInterfaceType []UserInterfaceType `xml:"UserInterfaceType"`

	PeriodOfRightsDelegation Period `xml:"PeriodOfRightsDelegation"`

	TerritoryOfRightsDelegation []string `xml:"TerritoryOfRightsDelegation"`

	MembershipType string `xml:"MembershipType"`

	InnerXml string `xml:",innerxml"`
}

type ArtistRole struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type AudioCodecType struct {
	XMLName xml.Name

	Version string `xml:"Version,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type AvRating struct {
	XMLName xml.Name

	RatingText string `xml:"RatingText"`

	RatingAgency RatingAgency `xml:"RatingAgency"`

	InnerXml string `xml:",innerxml"`
}

type BitRate struct {
	XMLName xml.Name

	UnitOfMeasure ddex.UnitOfBitRate `xml:"UnitOfMeasure,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CLine struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Year *int `xml:"Year"`

	CLineCompany string `xml:"CLineCompany"`

	CLineText string `xml:"CLineText"`

	InnerXml string `xml:",innerxml"`
}

type CalculationType struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CarrierType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CatalogNumber struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CdProtectionType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Collection struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	CollectionId []CollectionId `xml:"CollectionId"`

	CollectionType []CollectionType `xml:"CollectionType"`

	CollectionReference string `xml:"CollectionReference"`

	Title []Title `xml:"Title"`

	Contributor []ResourceContributor `xml:"Contributor"`

	CollectionCollectionReferenceList *CollectionCollectionReferenceList `xml:"CollectionCollectionReferenceList"`

	IsComplete bool `xml:"IsComplete"`

	DurationOfMusicalContent string `xml:"DurationOfMusicalContent"`

	CreationDate *EventDate `xml:"CreationDate"`

	OriginalReleaseDate *EventDate `xml:"OriginalReleaseDate"`

	OriginalLanguage string `xml:"OriginalLanguage"`

	CollectionDetailsByTerritory []CollectionDetailsByTerritory `xml:"CollectionDetailsByTerritory"`

	CollectionResourceReferenceList *CollectionResourceReferenceList `xml:"CollectionResourceReferenceList"`

	InnerXml string `xml:",innerxml"`
}

type CollectionCollectionReference struct {
	XMLName xml.Name

	SequenceNumber *int64 `xml:"SequenceNumber"`

	CollectionCollectionReference string `xml:"CollectionCollectionReference"`

	StartTime string `xml:"StartTime"`

	Duration string `xml:"Duration"`

	EndTime string `xml:"EndTime"`

	InclusionDate string `xml:"InclusionDate"`

	InnerXml string `xml:",innerxml"`
}

type CollectionCollectionReferenceList struct {
	XMLName xml.Name

	NumberOfCollections *int64 `xml:"NumberOfCollections"`

	CollectionCollectionReference []CollectionCollectionReference `xml:"CollectionCollectionReference"`

	InnerXml string `xml:",innerxml"`
}

type CollectionDetailsByTerritory struct {
	XMLName xml.Name

	Title []Title `xml:"Title"`

	Contributor []ResourceContributor `xml:"Contributor"`

	IsComplete *bool `xml:"IsComplete"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type CollectionId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	GRid string `xml:"GRid"`

	ISRC string `xml:"ISRC"`

	ISAN string `xml:"ISAN"`

	VISAN string `xml:"VISAN"`

	ICPN *ICPN `xml:"ICPN"`

	CatalogNumber *CatalogNumber `xml:"CatalogNumber"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type CollectionList struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Collection []Collection `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type CollectionResourceReferenceList struct {
	XMLName xml.Name

	CollectionResourceReference []string `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type CollectionType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Comment struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CommercialModelType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ConsumerRentalPeriod struct {
	XMLName xml.Name

	IsExtensible bool `xml:"IsExtensible,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ContactId struct {
	XMLName xml.Name

	EmailAddress []string `xml:"EmailAddress"`

	PhoneNumber []string `xml:"PhoneNumber"`

	FaxNumber []string `xml:"FaxNumber"`

	InnerXml string `xml:",innerxml"`
}

type ContainerFormat struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ConversionRate struct {
	XMLName xml.Name

	CurrencyCode CurrencyCode `xml:"CurrencyCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CourtesyLine struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CreationId struct {
	XMLName xml.Name

	ISWC string `xml:"ISWC"`

	OpusNumber string `xml:"OpusNumber"`

	ComposerCatalogNumber []string `xml:"ComposerCatalogNumber"`

	ISRC string `xml:"ISRC"`

	ISMN string `xml:"ISMN"`

	ISAN string `xml:"ISAN"`

	VISAN string `xml:"VISAN"`

	ISBN string `xml:"ISBN"`

	ISSN string `xml:"ISSN"`

	SICI string `xml:"SICI"`

	CatalogNumber *CatalogNumber `xml:"CatalogNumber"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type Cue struct {
	XMLName xml.Name

	CueUseType *CueUseType `xml:"CueUseType"`

	CueThemeType *CueThemeType `xml:"CueThemeType"`

	CueVocalType *CueVocalType `xml:"CueVocalType"`

	IsDance *bool `xml:"IsDance"`

	CueVisualPerceptionType *CueVisualPerceptionType `xml:"CueVisualPerceptionType"`

	CueOrigin *CueOrigin `xml:"CueOrigin"`

	HasMusicalContent *bool `xml:"HasMusicalContent"`

	StartTime string `xml:"StartTime"`

	Duration string `xml:"Duration"`

	EndTime string `xml:"EndTime"`

	CueCreationReference []CueCreationReference `xml:"CueCreationReference"`

	ReferencedCreationType string `xml:"ReferencedCreationType"`

	ReferencedCreationId *CreationId `xml:"ReferencedCreationId"`

	ReferencedCreationTitle []Title `xml:"ReferencedCreationTitle"`

	ReferencedCreationContributor []ResourceContributor `xml:"ReferencedCreationContributor"`

	InnerXml string `xml:",innerxml"`
}

type CueCreationReference struct {
	XMLName xml.Name

	CueWorkReference string `xml:"CueWorkReference"`

	CueResourceReference string `xml:"CueResourceReference"`

	InnerXml string `xml:",innerxml"`
}

type CueOrigin struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CueSheet struct {
	XMLName xml.Name

	CueSheetId []ProprietaryId `xml:"CueSheetId"`

	CueSheetReference string `xml:"CueSheetReference"`

	CueSheetType CueSheetType `xml:"CueSheetType"`

	Cue []Cue `xml:"Cue"`

	InnerXml string `xml:",innerxml"`
}

type CueSheetList struct {
	XMLName xml.Name

	CueSheet []CueSheet `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type CueSheetType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CueThemeType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CueUseType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CueVisualPerceptionType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type CueVocalType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type DSP struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TradingName *Name `xml:"TradingName"`

	URL []string `xml:"URL"`

	TerritoryCode string `xml:"TerritoryCode"`

	PartyId *PartyId `xml:"PartyId"`

	PartyName []PartyName `xml:"PartyName"`

	PartyId *PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type DealReference struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type DeductionRate struct {
	XMLName xml.Name

	DeductionRateType ddex.DeductionRateType `xml:"DeductionRateType,attr"`

	DeductionDescription string `xml:"DeductionDescription,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type DelegatedUsageRights struct {
	XMLName xml.Name

	UseType []UseType `xml:"UseType"`

	UserInterfaceType []UserInterfaceType `xml:"UserInterfaceType"`

	PeriodOfRightsDelegation Period `xml:"PeriodOfRightsDelegation"`

	TerritoryOfRightsDelegation []string `xml:"TerritoryOfRightsDelegation"`

	InnerXml string `xml:",innerxml"`
}

type Description struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type DistributionChannelDescriptor struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type DistributionChannelType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type DrmPlatformType struct {
	XMLName xml.Name

	Version string `xml:"Version,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type DurationByUseType struct {
	XMLName xml.Name

	Duration string `xml:"Duration"`

	UseType []UseType `xml:"UseType"`

	UserInterfaceType []UserInterfaceType `xml:"UserInterfaceType"`

	DistributionChannelType []DistributionChannelType `xml:"DistributionChannelType"`

	CarrierType []CarrierType `xml:"CarrierType"`

	InnerXml string `xml:",innerxml"`
}

type ErnMessageInBatch struct {
	XMLName xml.Name

	MessageType string `xml:"MessageType"`

	MessageId string `xml:"MessageId"`

	URL string `xml:"URL"`

	IncludedReleaseId []ReleaseId `xml:"IncludedReleaseId"`

	DeliveryType MessageActionType `xml:"DeliveryType"`

	ProductType ProductType `xml:"ProductType"`

	HashSum *HashSum `xml:"HashSum"`

	Signature string `xml:"Signature"`

	InnerXml string `xml:",innerxml"`
}

type EventDate struct {
	XMLName xml.Name

	IsApproximate bool `xml:"IsApproximate,attr"`

	IsBefore bool `xml:"IsBefore,attr"`

	IsAfter bool `xml:"IsAfter,attr"`

	TerritoryCode TerritoryCode `xml:"TerritoryCode,attr"`

	LocationDescription string `xml:"LocationDescription,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type EventDateTime struct {
	XMLName xml.Name

	IsApproximate bool `xml:"IsApproximate,attr"`

	IsBefore bool `xml:"IsBefore,attr"`

	IsAfter bool `xml:"IsAfter,attr"`

	TerritoryCode TerritoryCode `xml:"TerritoryCode,attr"`

	LocationDescription string `xml:"LocationDescription,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Extent struct {
	XMLName xml.Name

	UnitOfMeasure ddex.UnitOfExtent `xml:"UnitOfMeasure,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ExternalLocationDescriptor struct {
	XMLName xml.Name

	DescriptorSyntax string `xml:"DescriptorSyntax,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ExternalResourceLink struct {
	XMLName xml.Name

	URL []string `xml:"URL"`

	ValidityPeriod *Period `xml:"ValidityPeriod"`

	ExternalLink string `xml:"ExternalLink"`

	ExternallyLinkedResourceType []ExternallyLinkedResourceType `xml:"ExternallyLinkedResourceType"`

	FileFormat string `xml:"FileFormat"`

	InnerXml string `xml:",innerxml"`
}

type ExternallyLinkedResourceType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type File struct {
	XMLName xml.Name

	HashSum *HashSum `xml:"HashSum"`

	URL string `xml:"URL"`

	FileName string `xml:"FileName"`

	FilePath string `xml:"FilePath"`

	InnerXml string `xml:",innerxml"`
}

type Fingerprint struct {
	XMLName xml.Name

	Fingerprint string `xml:"Fingerprint"`

	FingerprintAlgorithmType FingerprintAlgorithmType `xml:"FingerprintAlgorithmType"`

	FingerprintAlgorithmVersion string `xml:"FingerprintAlgorithmVersion"`

	FingerprintAlgorithmParameter string `xml:"FingerprintAlgorithmParameter"`

	InnerXml string `xml:",innerxml"`
}

type FingerprintAlgorithmType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type FrameRate struct {
	XMLName xml.Name

	UnitOfMeasure ddex.UnitOfFrameRate `xml:"UnitOfMeasure,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type FulfillmentDate struct {
	XMLName xml.Name

	FulfillmentDate string `xml:"FulfillmentDate"`

	ResourceReleaseReference []string `xml:"ResourceReleaseReference"`

	InnerXml string `xml:",innerxml"`
}

type Genre struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	GenreText Description `xml:"GenreText"`

	SubGenre *Description `xml:"SubGenre"`

	InnerXml string `xml:",innerxml"`
}

type GoverningAgreementType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type GuaranteedAmount struct {
	XMLName xml.Name

	CurrencyCode CurrencyCode `xml:"CurrencyCode,attr"`

	ReferenceUnit ddex.ReferenceUnit `xml:"ReferenceUnit,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type HashSum struct {
	XMLName xml.Name

	HashSum string `xml:"HashSum"`

	HashSumAlgorithmType HashSumAlgorithmType `xml:"HashSumAlgorithmType"`

	InnerXml string `xml:",innerxml"`
}

type HashSumAlgorithmType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type HostSoundCarrier struct {
	XMLName xml.Name

	ReleaseId []ReleaseId `xml:"ReleaseId"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	Title []Title `xml:"Title"`

	DisplayArtist []Artist `xml:"DisplayArtist"`

	AdministratingRecordCompany []AdministratingRecordCompany `xml:"AdministratingRecordCompany"`

	TrackNumber string `xml:"TrackNumber"`

	VolumeNumberInSet string `xml:"VolumeNumberInSet"`

	InnerXml string `xml:",innerxml"`
}

type ICPN struct {
	XMLName xml.Name

	IsEan bool `xml:"IsEan,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ImageCodecType struct {
	XMLName xml.Name

	Version string `xml:"Version,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ImageDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	CLine []CLine `xml:"CLine"`

	Description *Description `xml:"Description"`

	CourtesyLine *CourtesyLine `xml:"CourtesyLine"`

	OriginalResourceReleaseDate *EventDate `xml:"OriginalResourceReleaseDate"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type ImageId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ProprietaryId []ProprietaryId `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type ImageType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type IndirectResourceContributor struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	IndirectResourceContributorRole []MusicalWorkContributorRole `xml:"IndirectResourceContributorRole"`

	PartyId *PartyId `xml:"PartyId"`

	PartyName []PartyName `xml:"PartyName"`

	PartyId *PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type Keywords struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type LabelName struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	LabelNameType string `xml:"LabelNameType,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type LicenseOrClaimRefusalReason struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type LicenseOrClaimRequestUpdateReason struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type LicenseOrClaimUpdateReason struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type LicenseRejectionReason struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type LinkedReleaseResourceReference struct {
	XMLName xml.Name

	LinkDescription string `xml:"LinkDescription,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Membership struct {
	XMLName xml.Name

	Organization PartyDescriptor `xml:"Organization"`

	MembershipType string `xml:"MembershipType"`

	StartDate string `xml:"StartDate"`

	EndDate string `xml:"EndDate"`

	InnerXml string `xml:",innerxml"`
}

type MessageActionType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type MessageAuditTrail struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	MessageAuditTrailEvent []MessageAuditTrailEvent `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type MessageAuditTrailEvent struct {
	XMLName xml.Name

	MessagingPartyDescriptor MessagingParty `xml:"MessagingPartyDescriptor"`

	DateTime string `xml:"DateTime"`

	InnerXml string `xml:",innerxml"`
}

type MessageHeader struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	MessageThreadId string `xml:"MessageThreadId"`

	MessageId string `xml:"MessageId"`

	MessageFileName string `xml:"MessageFileName"`

	MessageSender MessagingParty `xml:"MessageSender"`

	SentOnBehalfOf *MessagingParty `xml:"SentOnBehalfOf"`

	MessageRecipient MessagingParty `xml:"MessageRecipient"`

	MessageCreatedDateTime string `xml:"MessageCreatedDateTime"`

	MessageAuditTrail *MessageAuditTrail `xml:"MessageAuditTrail"`

	Comment *Comment `xml:"Comment"`

	MessageControlType string `xml:"MessageControlType"`

	InnerXml string `xml:",innerxml"`
}

type MessageNotificationPeriod struct {
	XMLName xml.Name

	StartDate string `xml:"StartDate"`

	EndDate string `xml:"EndDate"`

	InnerXml string `xml:",innerxml"`
}

type MessagingParty struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	PartyId PartyId `xml:"PartyId"`

	PartyName *PartyName `xml:"PartyName"`

	TradingName *Name `xml:"TradingName"`

	InnerXml string `xml:",innerxml"`
}

type MidiDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []Title `xml:"Title"`

	DisplayArtist []Artist `xml:"DisplayArtist"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	LabelName []LabelName `xml:"LabelName"`

	RightsController []RightsController `xml:"RightsController"`

	RemasteredDate *EventDate `xml:"RemasteredDate"`

	OriginalResourceReleaseDate *EventDate `xml:"OriginalResourceReleaseDate"`

	CLine []CLine `xml:"CLine"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type MidiId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ProprietaryId []ProprietaryId `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type MidiType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type MusicalWork struct {
	XMLName xml.Name

	IsUpdated bool `xml:"IsUpdated,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	MusicalWorkId []MusicalWorkId `xml:"MusicalWorkId"`

	MusicalWorkReference string `xml:"MusicalWorkReference"`

	ReferenceTitle []ReferenceTitle `xml:"ReferenceTitle"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	MusicalWorkContributor []MusicalWorkContributor `xml:"MusicalWorkContributor"`

	MusicalWorkType []MusicalWorkType `xml:"MusicalWorkType"`

	RightShare []RightShare `xml:"RightShare"`

	MusicalWorkDetailsByTerritory []MusicalWorkDetailsByTerritory `xml:"MusicalWorkDetailsByTerritory"`

	InnerXml string `xml:",innerxml"`
}

type MusicalWorkContributor struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	MusicalWorkContributorRole []MusicalWorkContributorRole `xml:"MusicalWorkContributorRole"`

	SocietyAffiliation []SocietyAffiliation `xml:"SocietyAffiliation"`

	PartyId *PartyId `xml:"PartyId"`

	PartyName []PartyName `xml:"PartyName"`

	PartyId *PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type MusicalWorkContributorRole struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type MusicalWorkDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	MusicalWorkContributor []MusicalWorkContributor `xml:"MusicalWorkContributor"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type MusicalWorkId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ISWC string `xml:"ISWC"`

	OpusNumber string `xml:"OpusNumber"`

	ComposerCatalogNumber []string `xml:"ComposerCatalogNumber"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type MusicalWorkType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Name struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type NumberOfDataMismatchItems struct {
	XMLName xml.Name

	DataMismatchStatus ddex.DataMismatchStatus `xml:"DataMismatchStatus,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type NumberOfSubscribers struct {
	XMLName xml.Name

	Quantity int64 `xml:"Quantity"`

	UseType []UseType `xml:"UseType"`

	UserInterfaceType []UserInterfaceType `xml:"UserInterfaceType"`

	DistributionChannelType []DistributionChannelType `xml:"DistributionChannelType"`

	CarrierType []CarrierType `xml:"CarrierType"`

	InnerXml string `xml:",innerxml"`
}

type OperatingSystemType struct {
	XMLName xml.Name

	Version string `xml:"Version,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type OrderType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type PLine struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	PLineType ddex.PLineType `xml:"PLineType,attr"`

	Year *int `xml:"Year"`

	PLineCompany string `xml:"PLineCompany"`

	PLineText string `xml:"PLineText"`

	InnerXml string `xml:",innerxml"`
}

type ParentalWarningType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type PartyDescriptor struct {
	XMLName xml.Name

	PartyId *PartyId `xml:"PartyId"`

	PartyName []PartyName `xml:"PartyName"`

	PartyId *PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type PartyId struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	IsDPID bool `xml:"IsDPID,attr"`

	IsISNI bool `xml:"IsISNI,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type PartyName struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	FullName Name `xml:"FullName"`

	FullNameAsciiTranscribed string `xml:"FullNameAsciiTranscribed"`

	FullNameIndexed *Name `xml:"FullNameIndexed"`

	NamesBeforeKeyName *Name `xml:"NamesBeforeKeyName"`

	KeyName *Name `xml:"KeyName"`

	NamesAfterKeyName *Name `xml:"NamesAfterKeyName"`

	AbbreviatedName *Name `xml:"AbbreviatedName"`

	InnerXml string `xml:",innerxml"`
}

type Period struct {
	XMLName xml.Name

	StartDate *EventDate `xml:"StartDate"`

	EndDate *EventDate `xml:"EndDate"`

	StartDateTime *EventDateTime `xml:"StartDateTime"`

	EndDateTime *EventDateTime `xml:"EndDateTime"`

	InnerXml string `xml:",innerxml"`
}

type Price struct {
	XMLName xml.Name

	CurrencyCode CurrencyCode `xml:"CurrencyCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type PriceConsumerPaidExcSalesTax struct {
	XMLName xml.Name

	CurrencyCode CurrencyCode `xml:"CurrencyCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type PriceInformation struct {
	XMLName xml.Name

	Description *Description `xml:"Description"`

	PriceRangeType *PriceRangeType `xml:"PriceRangeType"`

	PriceType *PriceType `xml:"PriceType"`

	WholesalePricePerUnit *Price `xml:"WholesalePricePerUnit"`

	BulkOrderWholesalePricePerUnit *Price `xml:"BulkOrderWholesalePricePerUnit"`

	SuggestedRetailPrice *Price `xml:"SuggestedRetailPrice"`

	InnerXml string `xml:",innerxml"`
}

type PriceRangeType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type PriceType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ProductType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type PromotionalCode struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ProprietaryId struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Purpose struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type RatingAgency struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Reason struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ReasonType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type RecordCompanyMarketShareData struct {
	XMLName xml.Name

	ReleaseType []ReleaseType `xml:"ReleaseType"`

	UnitsSoldTotal int64 `xml:"UnitsSoldTotal"`

	UseType []UseType `xml:"UseType"`

	UserInterfaceType []UserInterfaceType `xml:"UserInterfaceType"`

	DistributionChannelType []DistributionChannelType `xml:"DistributionChannelType"`

	CarrierType []CarrierType `xml:"CarrierType"`

	InnerXml string `xml:",innerxml"`
}

type RedeliveryReasonType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ReferenceTitle struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TitleText TitleText `xml:"TitleText"`

	SubTitle *SubTitle `xml:"SubTitle"`

	InnerXml string `xml:",innerxml"`
}

type RelatedLicenseOrClaimId struct {
	XMLName xml.Name

	LicenseOrClaimId *RightsAgreementId `xml:"LicenseOrClaimId"`

	LicenseOrClaimUpdateReason *LicenseOrClaimUpdateReason `xml:"LicenseOrClaimUpdateReason"`

	InnerXml string `xml:",innerxml"`
}

type RelatedLicenseOrClaimRequestId struct {
	XMLName xml.Name

	LicenseOrClaimRequestId *ProprietaryId `xml:"LicenseOrClaimRequestId"`

	LicenseOrClaimRequestUpdateReason *LicenseOrClaimRequestUpdateReason `xml:"LicenseOrClaimRequestUpdateReason"`

	InnerXml string `xml:",innerxml"`
}

type RelatedRelease struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ReleaseId []ReleaseId `xml:"ReleaseId"`

	ReferenceTitle *ReferenceTitle `xml:"ReferenceTitle"`

	ReleaseSummaryDetailsByTerritory []ReleaseSummaryDetailsByTerritory `xml:"ReleaseSummaryDetailsByTerritory"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	ReleaseRelationshipType ReleaseRelationshipType `xml:"ReleaseRelationshipType"`

	ReleaseDate *EventDate `xml:"ReleaseDate"`

	OriginalReleaseDate *EventDate `xml:"OriginalReleaseDate"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseAvailabilityStatus struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ReleaseCollectionReference struct {
	XMLName xml.Name

	ReleaseResourceType ddex.ReleaseResourceType `xml:"ReleaseResourceType,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ReleaseCollectionReferenceList struct {
	XMLName xml.Name

	NumberOfCollections *int64 `xml:"NumberOfCollections"`

	ReleaseCollectionReference []ReleaseCollectionReference `xml:"ReleaseCollectionReference"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	DisplayArtistName []Name `xml:"DisplayArtistName"`

	LabelName []LabelName `xml:"LabelName"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	Title []Title `xml:"Title"`

	DisplayArtist []Artist `xml:"DisplayArtist"`

	IsMultiArtistCompilation *bool `xml:"IsMultiArtistCompilation"`

	AdministratingRecordCompany []AdministratingRecordCompany `xml:"AdministratingRecordCompany"`

	ReleaseType []ReleaseType `xml:"ReleaseType"`

	RelatedRelease []RelatedRelease `xml:"RelatedRelease"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	GRid string `xml:"GRid"`

	ISRC string `xml:"ISRC"`

	ICPN *ICPN `xml:"ICPN"`

	CatalogNumber *CatalogNumber `xml:"CatalogNumber"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseRelationshipType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ReleaseResourceReference struct {
	XMLName xml.Name

	ReleaseResourceType ddex.ReleaseResourceType `xml:"ReleaseResourceType,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ReleaseResourceReferenceList struct {
	XMLName xml.Name

	ReleaseResourceReference []ReleaseResourceReference `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseSummary struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ReleaseId []ReleaseId `xml:"ReleaseId"`

	ReferenceTitle ReferenceTitle `xml:"ReferenceTitle"`

	ReleaseSummaryDetailsByTerritory []ReleaseSummaryDetailsByTerritory `xml:"ReleaseSummaryDetailsByTerritory"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseSummaryDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	DisplayArtistName []Name `xml:"DisplayArtistName"`

	LabelName []LabelName `xml:"LabelName"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type ReleaseType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type RemittanceAdvice struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ReportFormat struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ReportType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ResourceContainedResourceReference struct {
	XMLName xml.Name

	ResourceContainedResourceReference string `xml:"ResourceContainedResourceReference"`

	DurationUsed string `xml:"DurationUsed"`

	StartPoint *float64 `xml:"StartPoint"`

	Purpose *Purpose `xml:"Purpose"`

	InnerXml string `xml:",innerxml"`
}

type ResourceContainedResourceReferenceList struct {
	XMLName xml.Name

	ResourceContainedResourceReference []ResourceContainedResourceReference `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type ResourceContributor struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	ResourceContributorRole []ResourceContributorRole `xml:"ResourceContributorRole"`

	PartyId *PartyId `xml:"PartyId"`

	PartyName []PartyName `xml:"PartyName"`

	PartyId *PartyId `xml:"PartyId"`

	InnerXml string `xml:",innerxml"`
}

type ResourceContributorRole struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ResourceGroup struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []Title `xml:"Title"`

	SequenceNumber *int64 `xml:"SequenceNumber"`

	DisplayArtist []Artist `xml:"DisplayArtist"`

	DisplayConductor []Artist `xml:"DisplayConductor"`

	DisplayComposer []Artist `xml:"DisplayComposer"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	ResourceGroup []ResourceGroup `xml:"ResourceGroup"`

	ResourceGroupContentItem []ResourceGroupContentItem `xml:"ResourceGroupContentItem"`

	ResourceGroupResourceReferenceList *ResourceGroupResourceReferenceList `xml:"ResourceGroupResourceReferenceList"`

	ResourceGroupReleaseReference string `xml:"ResourceGroupReleaseReference"`

	ReleaseId *ReleaseId `xml:"ReleaseId"`

	InnerXml string `xml:",innerxml"`
}

type ResourceGroupContentItem struct {
	XMLName xml.Name

	SequenceNumber *int64 `xml:"SequenceNumber"`

	SequenceSubNumber *int64 `xml:"SequenceSubNumber"`

	ResourceType []ResourceType `xml:"ResourceType"`

	ReleaseResourceReference ReleaseResourceReference `xml:"ReleaseResourceReference"`

	LinkedReleaseResourceReference []LinkedReleaseResourceReference `xml:"LinkedReleaseResourceReference"`

	Duration string `xml:"Duration"`

	IsHiddenResource *bool `xml:"IsHiddenResource"`

	IsBonusResource *bool `xml:"IsBonusResource"`

	ResourceGroupContentItemReleaseReference string `xml:"ResourceGroupContentItemReleaseReference"`

	ReleaseId *ReleaseId `xml:"ReleaseId"`

	InnerXml string `xml:",innerxml"`
}

type ResourceGroupResourceReferenceList struct {
	XMLName xml.Name

	ResourceGroupResourceReference []string `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type ResourceId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ISRC string `xml:"ISRC"`

	ISMN string `xml:"ISMN"`

	ISAN string `xml:"ISAN"`

	VISAN string `xml:"VISAN"`

	ISBN string `xml:"ISBN"`

	ISSN string `xml:"ISSN"`

	SICI string `xml:"SICI"`

	CatalogNumber *CatalogNumber `xml:"CatalogNumber"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type ResourceMusicalWorkReference struct {
	XMLName xml.Name

	SequenceNumber *int64 `xml:"SequenceNumber"`

	DurationUsed string `xml:"DurationUsed"`

	IsFragment *bool `xml:"IsFragment"`

	ResourceMusicalWorkReference string `xml:"ResourceMusicalWorkReference"`

	InnerXml string `xml:",innerxml"`
}

type ResourceMusicalWorkReferenceList struct {
	XMLName xml.Name

	ResourceMusicalWorkReference []ResourceMusicalWorkReference `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type ResourceOmissionReason struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type ResourceType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type RightShare struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	RightShareId *RightsAgreementId `xml:"RightShareId"`

	RightShareReference string `xml:"RightShareReference"`

	RightShareCreationReferenceList *RightShareCreationReferenceList `xml:"RightShareCreationReferenceList"`

	RightsType []RightsType `xml:"RightsType"`

	UseType []UseType `xml:"UseType"`

	UserInterfaceType []UserInterfaceType `xml:"UserInterfaceType"`

	DistributionChannelType []DistributionChannelType `xml:"DistributionChannelType"`

	CarrierType []CarrierType `xml:"CarrierType"`

	CommercialModelType []CommercialModelType `xml:"CommercialModelType"`

	MusicalWorkRightsClaimType []string `xml:"MusicalWorkRightsClaimType"`

	RightsController []RightsController `xml:"RightsController"`

	ValidityPeriod Period `xml:"ValidityPeriod"`

	TariffReference *TariffReference `xml:"TariffReference"`

	LicenseStatus string `xml:"LicenseStatus"`

	HasFirstLicenseRefusal *bool `xml:"HasFirstLicenseRefusal"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	RightShareUnknown *bool `xml:"RightShareUnknown"`

	RightSharePercentage string `xml:"RightSharePercentage"`

	InnerXml string `xml:",innerxml"`
}

type RightShareCreationReferenceList struct {
	XMLName xml.Name

	RightShareWorkReference []string `xml:"RightShareWorkReference"`

	RightShareResourceReference []string `xml:"RightShareResourceReference"`

	RightShareReleaseReference []string `xml:"RightShareReleaseReference"`

	InnerXml string `xml:",innerxml"`
}

type RightsAgreementId struct {
	XMLName xml.Name

	MWLI []string `xml:"MWLI"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type RightsController struct {
	XMLName xml.Name

	SequenceNumber int64 `xml:"SequenceNumber,attr"`

	RightsControllerRole []string `xml:"RightsControllerRole"`

	PartyId *PartyId `xml:"PartyId"`

	PartyName []PartyName `xml:"PartyName"`

	PartyId *PartyId `xml:"PartyId"`

	RightShareUnknown *bool `xml:"RightShareUnknown"`

	RightSharePercentage string `xml:"RightSharePercentage"`

	InnerXml string `xml:",innerxml"`
}

type RightsType struct {
	XMLName xml.Name

	TerritoryCode TerritoryCode `xml:"TerritoryCode,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type RoyaltyAmount struct {
	XMLName xml.Name

	CurrencyCode CurrencyCode `xml:"CurrencyCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type RoyaltyCode struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type SalesReportingProxyReleaseId struct {
	XMLName xml.Name

	ReleaseId ReleaseId `xml:"ReleaseId"`

	Reason *Reason `xml:"Reason"`

	ReasonType ReasonType `xml:"ReasonType"`

	InnerXml string `xml:",innerxml"`
}

type SamplingRate struct {
	XMLName xml.Name

	UnitOfMeasure ddex.UnitOfFrequency `xml:"UnitOfMeasure,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type SheetMusicCodecType struct {
	XMLName xml.Name

	Version string `xml:"Version,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type SheetMusicDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []Title `xml:"Title"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	CLine []CLine `xml:"CLine"`

	CourtesyLine *CourtesyLine `xml:"CourtesyLine"`

	OriginalResourceReleaseDate *EventDate `xml:"OriginalResourceReleaseDate"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type SheetMusicId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ISMN string `xml:"ISMN"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type SheetMusicType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type SocietyAffiliation struct {
	XMLName xml.Name

	MusicRightsSociety PartyDescriptor `xml:"MusicRightsSociety"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type SoftwareDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	PLine []PLine `xml:"PLine"`

	CLine []CLine `xml:"CLine"`

	CourtesyLine *CourtesyLine `xml:"CourtesyLine"`

	OriginalResourceReleaseDate *EventDate `xml:"OriginalResourceReleaseDate"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type SoftwareId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ProprietaryId []ProprietaryId `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type SoftwareType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type SoundProcessorType struct {
	XMLName xml.Name

	Version string `xml:"Version,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type SoundRecordingCollectionReference struct {
	XMLName xml.Name

	SequenceNumber *int64 `xml:"SequenceNumber"`

	SoundRecordingCollectionReference string `xml:"SoundRecordingCollectionReference"`

	StartTime string `xml:"StartTime"`

	Duration string `xml:"Duration"`

	EndTime string `xml:"EndTime"`

	ReleaseResourceType string `xml:"ReleaseResourceType"`

	InnerXml string `xml:",innerxml"`
}

type SoundRecordingCollectionReferenceList struct {
	XMLName xml.Name

	NumberOfCollections *int64 `xml:"NumberOfCollections"`

	SoundRecordingCollectionReference []SoundRecordingCollectionReference `xml:"SoundRecordingCollectionReference"`

	InnerXml string `xml:",innerxml"`
}

type SoundRecordingDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []Title `xml:"Title"`

	DisplayArtist []Artist `xml:"DisplayArtist"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	LabelName []LabelName `xml:"LabelName"`

	RightsController []RightsController `xml:"RightsController"`

	RemasteredDate *EventDate `xml:"RemasteredDate"`

	OriginalResourceReleaseDate *EventDate `xml:"OriginalResourceReleaseDate"`

	PLine []PLine `xml:"PLine"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type SoundRecordingId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ISRC string `xml:"ISRC"`

	CatalogNumber *CatalogNumber `xml:"CatalogNumber"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type SoundRecordingType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type StoreLocationDescriptor struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type SubTitle struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type SupplyChainStatus struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Synopsis struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type TariffReference struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TariffSubReference string `xml:"TariffSubReference,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Tax struct {
	XMLName xml.Name

	CurrencyCode CurrencyCode `xml:"CurrencyCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type TaxRate struct {
	XMLName xml.Name

	Rate float64 `xml:"Rate"`

	TaxType []TaxType `xml:"TaxType"`

	TaxScope []TaxScope `xml:"TaxScope"`

	InnerXml string `xml:",innerxml"`
}

type TaxScope struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type TaxType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type TechnicalInstantiation struct {
	XMLName xml.Name

	DrmEnforcementType string `xml:"DrmEnforcementType"`

	VideoDefinitionType string `xml:"VideoDefinitionType"`

	CodingType string `xml:"CodingType"`

	BitRate *BitRate `xml:"BitRate"`

	InnerXml string `xml:",innerxml"`
}

type TextCodecType struct {
	XMLName xml.Name

	Version string `xml:"Version,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type TextDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	CLine []CLine `xml:"CLine"`

	CourtesyLine *CourtesyLine `xml:"CourtesyLine"`

	OriginalResourceReleaseDate *EventDate `xml:"OriginalResourceReleaseDate"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type TextId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ISBN string `xml:"ISBN"`

	ISSN string `xml:"ISSN"`

	SICI string `xml:"SICI"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type TextType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Title struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	TitleType ddex.TitleType `xml:"TitleType,attr"`

	TitleText TitleText `xml:"TitleText"`

	SubTitle []TypedSubTitle `xml:"SubTitle"`

	InnerXml string `xml:",innerxml"`
}

type TitleText struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type TotalRoyaltyAmount struct {
	XMLName xml.Name

	ReleaseType []ReleaseType `xml:"ReleaseType"`

	RightsType []RightsType `xml:"RightsType"`

	RoyaltyAmount RoyaltyAmount `xml:"RoyaltyAmount"`

	InnerXml string `xml:",innerxml"`
}

type TypedSubTitle struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	SubTitleType string `xml:"SubTitleType,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type Usage struct {
	XMLName xml.Name

	UseType []UseType `xml:"UseType"`

	UserInterfaceType []UserInterfaceType `xml:"UserInterfaceType"`

	DistributionChannelType []DistributionChannelType `xml:"DistributionChannelType"`

	CarrierType []CarrierType `xml:"CarrierType"`

	TechnicalInstantiation *TechnicalInstantiation `xml:"TechnicalInstantiation"`

	NumberOfUsages *int64 `xml:"NumberOfUsages"`

	InnerXml string `xml:",innerxml"`
}

type UseType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type UserDefinedResourceDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	UserDefinedValue []UserDefinedValue `xml:"UserDefinedValue"`

	PLine []PLine `xml:"PLine"`

	CLine []CLine `xml:"CLine"`

	OriginalResourceReleaseDate *EventDate `xml:"OriginalResourceReleaseDate"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type UserDefinedResourceId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ProprietaryId []ProprietaryId `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type UserDefinedResourceType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type UserDefinedValue struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	Description string `xml:"Description,attr"`

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type UserInterfaceType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type VideoCodecType struct {
	XMLName xml.Name

	Version string `xml:"Version,attr"`

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type VideoCueSheetReference struct {
	XMLName xml.Name

	VideoCueSheetReference string `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type VideoCueSheetReferenceList struct {
	XMLName xml.Name

	VideoCueSheetReference []string `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type VideoDetailsByTerritory struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	Title []Title `xml:"Title"`

	DisplayArtist []Artist `xml:"DisplayArtist"`

	ResourceContributor []ResourceContributor `xml:"ResourceContributor"`

	IndirectResourceContributor []IndirectResourceContributor `xml:"IndirectResourceContributor"`

	RightsAgreementId *RightsAgreementId `xml:"RightsAgreementId"`

	LabelName []LabelName `xml:"LabelName"`

	RightsController []RightsController `xml:"RightsController"`

	RemasteredDate *EventDate `xml:"RemasteredDate"`

	OriginalResourceReleaseDate *EventDate `xml:"OriginalResourceReleaseDate"`

	PLine []PLine `xml:"PLine"`

	CLine []CLine `xml:"CLine"`

	TerritoryCode []string `xml:"TerritoryCode"`

	ExcludedTerritoryCode []string `xml:"ExcludedTerritoryCode"`

	InnerXml string `xml:",innerxml"`
}

type VideoId struct {
	XMLName xml.Name

	IsReplaced bool `xml:"IsReplaced,attr"`

	ISRC string `xml:"ISRC"`

	ISAN string `xml:"ISAN"`

	VISAN string `xml:"VISAN"`

	CatalogNumber *CatalogNumber `xml:"CatalogNumber"`

	ProprietaryId []ProprietaryId `xml:"ProprietaryId"`

	InnerXml string `xml:",innerxml"`
}

type VideoType struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

type WebPage struct {
	XMLName xml.Name

	PartyId []PartyId `xml:"PartyId"`

	ReleaseId []ReleaseId `xml:"ReleaseId"`

	PageName *Name `xml:"PageName"`

	URL string `xml:"URL"`

	UserName string `xml:"UserName"`

	Password string `xml:"Password"`

	InnerXml string `xml:",innerxml"`
}

type WorkList struct {
	XMLName xml.Name

	LanguageAndScriptCode string `xml:"LanguageAndScriptCode,attr"`

	MusicalWork []MusicalWork `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type WsMessageStatus struct {
	XMLName xml.Name

	Namespace string `xml:"Namespace,attr"`

	UserDefinedValue string `xml:"UserDefinedValue,attr"`

	Text     string `xml:",chardata"`
	InnerXml string `xml:",innerxml"`
}

// XSD SimpleType declarations

type CurrencyCode string

type TerritoryCode string
